@page "/"
@using AirFortune.Services
@using AirFortune.Models
@using Blazored.LocalStorage
@inject IAirtableService _airtableService
@inject ILocalStorageService _localStorage
@inject INotifyService _notifyService

<div class="container-fluid">

    <div class="row">
        <div class="col-12">
            <CompetitionRunner Entries="@Entries"></CompetitionRunner>
        </div>
    </div>

    <div class="row">
        <div class="col">
            @error
        </div>
    </div>
</div>


@code
{
    private string error = string.Empty;
    private string _apiKey = string.Empty;

    public CompetitionEntry[] Entries = Array.Empty<CompetitionEntry>();

    protected override async Task OnInitializedAsync()
    {
        _apiKey = await _localStorage.GetItemAsync<string>("apikey");
        _notifyService.TableChanged += OnTableSelect;
    }

    private async void OnTableSelect(object? sender, AirFortuneTable table)
    {
        try
        {
            var names = await _airtableService.GetNamesAsync(_apiKey,
                table.BaseId, table.Name, table.FirstNameField, table.LastNameField);
            if (names != null)
            {
                Entries = names.Select(x => new CompetitionEntry(x)).ToArray();
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }

        StateHasChanged();
    }
}
